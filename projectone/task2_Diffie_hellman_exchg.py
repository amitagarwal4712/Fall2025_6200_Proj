import sys
import argparse
import getopt
import datetime
import io
import random

P=176478739768874059356517070832095509771     # large primary number
G=5119  # Random generator Number public key

def generate_secret_key():   #Generates a random private key like 'a' for Alice, 'b' for Bob.
    return random.randint(1, P - 1)

def calculate_public_key():   #Calculates the public key from the private key.  like gaModP or gbModP
    private_key = generate_secret_key()
    return P, G, private_key, pow(G, private_key, P)

def calculate_shared_secret(public_key, private_key):    #Calculates the shared secret using the other party's public key and own private key.  (gaModP)bModP or (gbModP)aModP
    return pow(int(public_key), int(private_key), P)

#Task 2 Diffie-Hellman key Exchange (Functionas are called from task2_Diffie_hellman_exchg_FUNC.py file )
#Note: for sign and verification of the message are used from function called from DigitalSign/RsaDigitalsign.py
def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("-g", "--generatekey",type=str, help="generate gamodp/gabmodp")
    
    parser.add_argument("-c", "--calculatekey",type=str, help="calculate gabModP")
    parser.add_argument("-p", "--randomnumber",type=str, help="provide [ab]")
    parser.add_argument("-s", "--generatedpublickey",type=str, help="provide g[ab]ModP")

    args = parser.parse_args()

    if args.generatekey:   # random number generation      e.g.  python task2_Diffie_hellman_exchg.py -g key
        P, G, randomnumber, g_a_mod_p = calculate_public_key()
        print(f"Large Prime Number P : {P}")
        print(f"Generator G : {G}")
        print(f"Random secret number by Alice/Bob is : {randomnumber}")
        print(f"Secret Generated by Alice/Bob g[ab] mod P : {g_a_mod_p}")
    if args.calculatekey:   # random number generation      e.g.  python task2_Diffie_hellman_exchg.py -c calculate -p <a or b  value> -s <gamodp or gbmod p>
        calculatedsecret = calculate_shared_secret(args.generatedpublickey, args.randomnumber)
        print(f"gab mod P : {calculatedsecret}")

if __name__ == "__main__":
    main()
